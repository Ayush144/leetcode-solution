Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
Example 2:

Input: s = "foo", t = "bar"
Output: false
Example 3:

Input: s = "paper", t = "title"
Output: true
 

Constraints:

1 <= s.length <= 5 * 104
t.length == s.length
s and t consist of any valid ascii character.


JAVASOLUTION-
class Solution {
    public boolean isIsomorphic(String s, String t) {
        String s1= transform(s);
        String s2= transform(t);
        if(s1.equals(s2)){
            return true;
        }
        return false;
      
    }
        public static String transform(String s){
            HashMap<Character,Integer> map1= new HashMap<>();
            StringBuffer str = new StringBuffer();
            
             
        for(int i=0;i<s.length();i++){
            char ch =s.charAt(i);
            if(!map1.containsKey(ch)){
                map1.put(ch,i);
            }
            str.append(Integer.toString(map1.get(ch)));
            str.append(" ");
        }
           
      return str.toString();
        }
}
